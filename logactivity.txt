<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Spatie\Activitylog\Models\Activity;

class LogActivity
{
    public function handle(Request $request, Closure $next)
    {
        $response = $next($request);
        $controller = $request->route()->getController();
        $methodName = $request->route()->getActionMethod();

        if ($controller) {
            $this->logActivityForMethod($controller, $methodName);
        }
        return $response;
    }

    private function logActivityForMethod($controller, $methodName)
    {
        $controllerName = class_basename($controller);

        switch ("$controllerName@$methodName") {
            case 'WifiLogsController@index': 
                $this
                    ->logActivity("Performed recent action on WifiLogsController", 'wifi_logs');
                break;
            case 'InHouseLogsController@index':
                $this
                    ->logActivity("Performed recent action on InHouseLogsController", 'inhouse-view_logs');
                break;
            // case 'InHouseLogsController@index':
            //     $this
            //         ->logActivity("Performed recent action on InHouseLogsController", 'inhouse-view_logs');
            //     break;
        }
    }

    private function logActivity($description, $logName)
    {
        Activity::create([
            'description' => $description,
            'log_name' => $logName, 
        ]);
    }
}
